package com.mobiletheatertech.plot;

import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

/**
 * Parse an XML stream, which should contain a Plot specification.
 * 
 * XML tag of the root node must be 'plot'.
 * Children are 'venue' (exactly one required), 'stage', and 'truss'.
 * There are no attributes.
 *
 * @author dhs
 * @since 0.0.1
 */
public class Parse {

    /**
     * Parse the provided XML stream, expecting a description of a lighting
     * plot.
     *
     * @param stream lighting plot XML stream
     */
    public Parse( InputStream stream ) throws Exception {
        DocumentBuilderFactory builderFactory =
            DocumentBuilderFactory.newInstance();
        DocumentBuilder builder = null;
        try {
            builder = builderFactory.newDocumentBuilder();
        } catch ( ParserConfigurationException e ) {
            e.printStackTrace();
            System.exit( 1 );
        }

        Document xml = null;
        // These catches are generated by Netbeans. I'm not yet sure they are what I want.
        // DHS 2013-04-22
        try {
            xml = builder.parse( stream );
        } catch ( SAXException ex ) {
            Logger.getLogger( Parse.class.getName() ).log( Level.SEVERE, null, ex );
        } catch ( IOException ex ) {
            Logger.getLogger( Parse.class.getName() ).log( Level.SEVERE, null, ex );
        }

        Element root = xml.getDocumentElement();
        if ( "plot" != root.getTagName() ) {
            throw new InvalidXMLException( "Top level element must be 'plot' " );
        }
        NodeList venue = root.getElementsByTagName( "venue" );
        Venue.ParseXML( venue );
        NodeList stage = root.getElementsByTagName( "stage" );
        Stage.ParseXML( stage );
        NodeList hangpoints = root.getElementsByTagName( "hangpoint" );
        HangPoint.ParseXML( hangpoints );
        NodeList truss = root.getElementsByTagName( "truss" );
        Truss.ParseXML( truss );
        NodeList suspend = root.getElementsByTagName( "suspend" );
        Suspend.ParseXML( suspend );
        NodeList base = root.getElementsByTagName( "base" );
        Base.ParseXML( base  );

        Truss.VerifyAll();

    }
}
